#!/usr/bin/env bash

set -e

spec_dir="/var/vcap/jobs/apply-specs/specs"
config_dir="/var/vcap/jobs/apply-specs/config"

kubectl="/var/vcap/packages/kubernetes/bin/kubectl --kubeconfig=/var/vcap/jobs/apply-specs/config/kubeconfig"

apply_spec() {
  local spec_file="${spec_dir}/${1}"
  echo "Deploying $spec_file"
  ${kubectl} apply -f "${spec_file}"
}

wait_for() {
    ${kubectl} rollout status "deployments/${1}" -w --namespace=kube-system
}

create_dashboard_secrets() {
  local secret_name=kubernetes-dashboard-certs
  local namespace=kube-system

  if ${kubectl} get secret ${secret_name} -n ${namespace} > /dev/null 2>&1; then
    ${kubectl} delete secret ${secret_name} -n ${namespace}
  fi

  ${kubectl} create secret generic ${secret_name} \
  --from-file=kubernetes-dashboard-cert=${config_dir}/kubernetes-dashboard/kubernetes-dashboard.crt \
  --from-file=kubernetes-dashboard-key=${config_dir}/kubernetes-dashboard/kubernetes-dashboard.key \
  -n ${namespace}
}

main() {

<%
  supported_addons = ['coredns', 'metrics-server', 'kubernetes-dashboard']

  bootstrap_addons = p('addons')

  bootstrap_addons = bootstrap_addons.each do |v|
    raise "#{v} is not a supported addon" unless supported_addons.include?(v)
  end
%>
<% if bootstrap_addons.include?('coredns') %>
  <% if p('specs.coredns') != "nil" %>
    apply_spec "coredns.yml"
    wait_for coredns
  <% else %>
    echo "specs.coredns doesn't exist"
    exit 1
  <% end %>
<% end %>

<% if bootstrap_addons.include?('metrics-server') %>
  <% if p('specs.metrics-server') != "nil" %>
    apply_spec "metrics-server.yml"
    wait_for metrics-server
  <% else %>
    echo "specs.metrics-server doesn't exist"
    exit 1
  <% end %>
<% end %>

<% if bootstrap_addons.include?('kubernetes-dashboard') %>
  <% if p('specs.kubernetes-dashboard') != "nil" %>
    create_dashboard_secrets
    apply_spec "kubernetes-dashboard.yml"
    wait_for kubernetes-dashboard
  <% else %>
    echo "specs.kubernetes-dashboard doesn't exist"
    exit 1
  <% end %>
<% end %>

<% if !p('specs.addons').empty? and p('specs.addons') != "nil" %>
  apply_spec "addons.yml"
  <% else %>
  echo "No addons to apply."
<% end %>
}

main
